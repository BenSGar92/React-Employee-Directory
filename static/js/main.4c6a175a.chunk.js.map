{"version":3,"sources":["utils/API.js","components/Banner/index.js","components/Container/index.js","components/SearchResults/index.js","components/SearchBox/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Banner","props","className","style","backgroundImage","children","Container","SearchResults","results","map","result","id","src","picture","thumbnail","name","first","last","phone","location","city","state","email","SearchBox","onChange","list","type","placeholder","onClick","onSubmit","App","search","employees","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","filteredUsers","filter","employee","join","toLowerCase","includes","API","then","res","data","catch","err","console","log","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAEe,EACD,WACN,OAAOA,IAAMC,IAAI,kD,MCOVC,MARf,SAAgBC,GACd,OACE,qBAAKC,UAAU,mBAAmBC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAMG,gBAAf,MAA1D,SACGH,EAAMI,YCAEC,MAJf,SAAmBL,GACjB,OAAO,qBAAKC,UAAU,YAAYC,MAAOF,EAAME,MAAxC,SAAgDF,EAAMI,Y,MC6BhDE,MA7Bf,SAAuBN,GACrB,OACE,oBAAIC,UAAU,4BAAd,SACKD,EAAMO,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACf,oBAAaT,UAAU,kBAAvB,SACI,sBAAKA,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SACI,qBAAKU,IAAKF,EAAOG,QAAQC,UAAWZ,UAAU,gBAElD,sBAAKA,UAAU,QAAf,UACKQ,EAAOK,KAAKC,MADjB,IACyBN,EAAOK,KAAKE,QAErC,qBAAKf,UAAU,QAAf,SACKQ,EAAOQ,QAEZ,sBAAKhB,UAAU,QAAf,UACKQ,EAAOS,SAASC,KADrB,KAC6BV,EAAOS,SAASE,SAE7C,qBAAKnB,UAAU,QAAf,SACKQ,EAAOY,YAhBXX,S,MCsBNY,MAzBf,SAAmBtB,GACjB,OACE,sBAAMC,UAAU,SAAhB,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,SAAf,SACI,uBACAsB,SAAUvB,EAAMuB,SAChBT,KAAK,WACLU,KAAK,YACLC,KAAK,OACLxB,UAAU,eACVyB,YAAY,2BACZhB,GAAG,eAGP,qBAAKT,UAAU,QAAf,SACI,wBAAQwB,KAAK,SAASE,QAAS3B,EAAM4B,SAAU3B,UAAU,kBAAzD,4BCmCG4B,E,4MA9CbT,MAAQ,CACNU,OAAQ,GACRC,UAAW,GACXxB,QAAS,GACTyB,MAAO,I,EAUTC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEL,OAAQI,EAAME,OAAOC,S,EAGvCC,iBAAmB,SAAAJ,GACjBA,EAAMK,iBACN,IAAMC,EAAgB,EAAKpB,MAAMW,UAAUU,QAAO,SAACC,GAEjD,MADiB,CAACA,EAAS5B,KAAKC,MAAO2B,EAAS5B,KAAKE,MAAM2B,KAAK,KAAKC,cACrDC,SAAS,EAAKzB,MAAMU,OAAOc,kBAG7C,EAAKT,SAAS,CACZ5B,QAASiC,K,kEAlBQ,IAAD,OAClBM,IACGC,MAAK,SAAAC,GAAG,OAAI,EAAKb,SAAS,CAAEJ,UAAWiB,EAAIC,KAAK1C,QAASA,QAASyC,EAAIC,KAAK1C,aAC3E2C,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAmB5B,OACE,gCACG,cAAC,EAAD,CAAQhD,gBAAgB,kHAAxB,SACC,sDAEF,eAAC,EAAD,WACE,cAAC,EAAD,CAAWoB,SAAU+B,KAAKrB,kBAAmBL,SAAU0B,KAAKhB,mBAE5D,cAAC,EAAD,CAAe/B,QAAS+C,KAAKlC,MAAMb,oB,GAvC3BgD,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c6a175a.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default {\r\n    getUsers: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n}","import React from \"react\";\r\nimport \"./banner.css\";\r\n\r\nfunction Banner(props) {\r\n  return (\r\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport \"./searchResults.css\";\r\n\r\nfunction SearchResults(props) {\r\n  return (\r\n    <ul className=\"list-group search-results\">    \r\n        {props.results.map((result, id) => (\r\n            <li key={id} className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                    \r\n                    <div className=\"col-2\">\r\n                        <img src={result.picture.thumbnail} className=\"img-fluid\" />\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        {result.name.first} {result.name.last}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        {result.phone}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        {result.location.city}, {result.location.state}\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        {result.email}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport \"./searchBox.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction SearchBox(props) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group row\">\r\n        <div className=\"col-10\">\r\n            <input\r\n            onChange={props.onChange}\r\n            name=\"employee\"\r\n            list=\"employees\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type in a name to search\"\r\n            id=\"employee\"\r\n            />\r\n        </div>\r\n        <div className=\"col-2\">\r\n            <button type=\"submit\" onClick={props.onSubmit} className=\"btn btn-success\">\r\n                Search\r\n            </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport API from \"../src/utils/API\";\nimport Banner from \"../src/components/Banner\"\nimport Container from \"../src/components/Container\"\nimport SearchResults from \"../src/components/SearchResults\"\nimport SearchBox from \"../src/components/SearchBox\"\n\n\nclass App extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getUsers()\n      .then(res => this.setState({ employees: res.data.results, results: res.data.results }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const filteredUsers = this.state.employees.filter((employee) => {\n      const fullName = [employee.name.first, employee.name.last].join(\" \").toLowerCase()\n      return fullName.includes(this.state.search.toLowerCase())\n      \n    })\n    this.setState({\n      results: filteredUsers\n    })\n  };\n  render() {\n    return (\n      <div>\n         <Banner backgroundImage=\"https://images.pexels.com/photos/3184396/pexels-photo-3184396.jpeg?cs=srgb&dl=pexels-fauxels-3184396.jpg&fm=jpg\">\n          <h1>Employee Directory</h1>\n        </Banner>\n        <Container>\n          <SearchBox onChange={this.handleInputChange} onSubmit={this.handleFormSubmit}>\n          </SearchBox>\n          <SearchResults results={this.state.results}>\n          </SearchResults>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}